

sub getMatchValue {

    my $tag   = $_[0];    #Marc field
    my $code  = $_[1];    #Marc subfield
    my $vari  = $_[2];    #orignal data from csv
    my $posmatch = $_[3];    #which match value assigned to this match?
    my $path   = $_[4]; #xpc
    my $record   = $_[5]; #rec
	
	my $matchvalue = 0;

    foreach my $el ( $path->findnodes( './datafield[@tag=' . $tag . ']', $record ) )
    {
        my $marcfield =
          $path->findnodes( './subfield[@code=' . $code . ']', $el )->to_literal;

        # debug:
        print $fh_report "marcfield " . $tag . $code . ": " . $marcfield . "\n";

        if ( $vari =~ m/$marcfield/i ) {
            print $fh_report "marcfield match \n";
			$matchvalue = $posmatch;
		}
		
    }
	return $matchvalue;

}

sub getMatchValue {
    my $code   = $_[0];    #subfield
    my $path   = $_[1]; #xpc
	my $element = $_[2]; #el
	my $vari  = $_[3];    #orignal data from csv
	my $posmatch = $_[4];    #which match value assigned to this match?

		my $matchvalue = 0;
    
    my $marcfield = $path->findnodes( './subfield[@code=' . $code . ']', $element)->to_literal;
    
    # debug:
	print $fh_report "marcfield: " . $marcfield . "\n";
	
	if ( $vari =~ m/$marcfield/i ) {
            print $fh_report "marcfield match \n";
			$matchvalue = $posmatch;
		}
	return $matchvalue;
	
}


sub getMatchValue {


                        $Marc::MARC710a =
                          $xpc->findnodes( './subfield[@code="a"]', $el )
                          ->to_literal;

                        # debug:
                        print $fh_report "Feld 710a: " . $Marc::MARC710a . "\n";

                        if ( $Vari::author =~ m/$Marc::MARC710a/i )
                        { #kommt Autor in 710a vor? (ohne Gross-/Kleinschreibung zu beachten)
                            $Match::AUTHORMATCH += 10;
                        }    #else { $Match::AUTHORMATCH = 0; }
                             # debug:
                        print $fh_report "AUTHORMATCH: "
                          . $Match::AUTHORMATCH . "\n";
                    }


